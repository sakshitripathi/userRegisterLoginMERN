[{"/home/sakshi/registerapp/src/index.js":"1","/home/sakshi/registerapp/src/reportWebVitals.js":"2","/home/sakshi/registerapp/src/component/createuser.jsx":"3","/home/sakshi/registerapp/src/apicall.js":"4"},{"size":531,"mtime":1610736804107,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1610729155664,"results":"7","hashOfConfig":"6"},{"size":3868,"mtime":1610757430966,"results":"8","hashOfConfig":"6"},{"size":516,"mtime":1610752958437,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1owvrop",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sakshi/registerapp/src/index.js",[],["20","21"],"/home/sakshi/registerapp/src/reportWebVitals.js",[],"/home/sakshi/registerapp/src/component/createuser.jsx",["22","23","24","25","26"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { createUser ,loginUser} from '../apicall'\n\n\n\nclass CreateUser extends React.Component {\n    state={\n        fullname:'',\n        mobileno:'',\n        email:'',\n        password:'',\n        confirmpassword:'',\n        loginemail:'',\n        loginpassword:''\n    }\n\n    onButtonClick = () => {\n        console.log(\"the state is\")\n         console.log(this.state)\n         \n         if (this.state.fullname == '') {\n             alert(\"full name cannot be empty\")\n             return\n         }\n         if (isNaN(this.state.mobileno)||this.state.mobileno.length!=10) {\n            alert(\"invalid mobile number\")\n            return\n        }\n        if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.state.email)) {\n            alert(\"invalid email id\")\n            return\n        }\n\n        if (!/^[A-Za-z]\\w{8,16}$/.test(this.state.password)) {\n            alert(\"invalid password,try another\")\n            return\n        }\n        if(this.state.confirmpassword!=this.state.password)\n        {\n            alert(\"passwords did not match\")\n            return\n        }\n        \n        this.callApi()\n        \n    }\n    onLoginButtonClick = () => {\n        if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(this.state.loginemail)) {\n            alert(\"invalid email id\")\n        }\n        if (!/^[A-Za-z]\\w{8,16}$/.test(this.state.loginpassword)) {\n            alert(\"invalid password\")\n        }\n        this.callloginApi()\n    }\n\n    handleChange = (e) => {\n\n        console.log(e.target.id)\n        console.log(e.target.value)\n        this.setState({ [e.target.id]: e.target.value });\n      }\n\n\n    callApi = () => {\n        createUser(this.state)\n        .then(response => {\n            response.text().then(function (text) {\n                alert(text);\n              });\n         \n      });\n        \n        //return body;\n      };\n      callloginApi = () => {\n        loginUser(this.state)\n        .then(response => {\n            response.text().then(function (text) {\n                alert(text);\n              });\n         \n      });\n        \n        //return body;\n      };\n\n\n    render() {\n      return (\n        <div>\n            <label for=\"fullname\">Fullname:</label>\n      <input type=\"text\" onChange={this.handleChange} id=\"fullname\" label=\"fullname\" variant=\"outlined\" /><br></br><br></br>\n      <label for=\"email\">Email:</label>\n      <input type=\"text\" onChange={this.handleChange} id=\"email\" label=\"email\" variant=\"outlined\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required/><br></br><br></br>\n      <label for=\"number\">Mobile no.:</label>\n      <input  onChange={this.handleChange} type=\"number\" id=\"mobileno\"  title=\"mobile number should be 10 digits\" pattern=\"[1-9]{1}[0-9]{9}\"/> <br></br><br></br>\n      <label for=\"pwd\">Password:</label>\n      <input onChange={this.handleChange} type=\"password\" id=\"password\" /> <br></br><br></br>\n      <label for=\"confirmpass\">Confirm Password:</label>\n      <input onChange={this.handleChange} type=\"password\" id=\"confirmpassword\" /> <br></br><br></br>\n      <Button variant=\"outlined\" onClick={this.onButtonClick}>Register</Button>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <label for=\"email\">Enter Email to login:</label>\n    <input type=\"text\" onChange={this.handleChange} id=\"loginemail\" label=\"loginemail\" variant=\"outlined\" /><br></br><br></br>\n    <label for=\"pwd\">Password:</label>\n      <input onChange={this.handleChange} type=\"password\" id=\"loginpassword\" /> <br></br>\n      <Button variant=\"outlined\" onClick={this.onLoginButtonClick}>Login</Button>\n    </div>\n    \n    \n      );\n    }\n  }\n\nexport default CreateUser;","/home/sakshi/registerapp/src/apicall.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":17},{"ruleId":"31","severity":1,"message":"35","line":3,"column":10,"nodeType":"33","messageId":"34","endLine":3,"endColumn":20},{"ruleId":"36","severity":1,"message":"37","line":24,"column":34,"nodeType":"38","messageId":"39","endLine":24,"endColumn":36},{"ruleId":"36","severity":1,"message":"40","line":28,"column":68,"nodeType":"38","messageId":"39","endLine":28,"endColumn":70},{"ruleId":"36","severity":1,"message":"40","line":41,"column":38,"nodeType":"38","messageId":"39","endLine":41,"endColumn":40},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]